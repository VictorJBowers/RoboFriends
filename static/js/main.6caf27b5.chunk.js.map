{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/Searchbox.js","Components/Scroll.js","Components/ErrorBoundry.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","className","alt","src","cardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","CardList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"oNAgBeA,EAdF,SAACC,GAAU,IACbC,EAAmBD,EAAnBC,KAAKC,EAAcF,EAAdE,MAAOC,EAAOH,EAAPG,GACnB,OACI,sBAAKC,UAAU,kDAAf,UACK,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cAE1B,gCACI,6BAAKF,IACL,4BAAIC,WCaDK,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAGf,OACG,gCACKA,EAAOC,KAAI,SAACC,EAAKC,GAClB,OACA,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,MAJT,QCIOC,EAVG,SAAC,GAA+B,EAA9BC,YAA+B,IAAlBC,EAAiB,EAAjBA,aAC7B,OACI,uBACQV,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,KCCXI,EAPA,SAAClB,GACZ,OACI,qBAAKmB,MAAO,CAACC,UAAU,SAASC,OAAO,kBAAkBC,OAAO,SAAhE,SACKtB,EAAMuB,YCiBJC,E,kDAnBX,WAAYxB,GAAO,IAAD,8BACd,cAAMA,IACGyB,MAAO,CACRC,UAAS,GAHH,E,qDAQlB,SAAkBC,EAAMC,GACpBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAG5B,WACI,OAAGG,KAAKJ,MAAMC,SACH,sDAEJG,KAAK7B,MAAMuB,a,GAjBCQ,aCkDZC,G,wDAzCX,aAAc,IAAD,8BACR,gBAYLC,eAAiB,SAACC,GACf,EAAKJ,SAAS,CAACjB,YAAaqB,EAAMC,OAAOC,SAZxC,EAAKX,MAAM,CAEPjB,OAAQ,GACRK,YAAa,IALR,E,qDAQb,WAAoB,IAAD,OACfwB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAKA,EAASC,UAC3BF,MAAK,SAAAG,GAAK,OAAG,EAAKX,SAAS,CAACtB,OAAOiC,S,oBAOxC,WAAS,IAAD,OACEC,EAAiBb,KAAKJ,MAAMjB,OAAOmC,QAAO,SAAAC,GAC5C,OAAOA,EAAM3C,KAAK4C,cAAcC,SAAS,EAAKrB,MAAMZ,YAAYgC,kBAEpE,OAA+B,IAA5BhB,KAAKJ,MAAMjB,OAAOuC,OACV,yCAGP,sBAAK3C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAce,KAAKI,iBAClC,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAACe,EAAD,CAAUxC,OAAQkC,e,GAhCpBX,cCEHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAEL,cAAC,EAAD,IAASC,SAASC,eAAe,SAMrCX,M","file":"static/js/main.6caf27b5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = (props) =>{\r\n    const {name,email, id } = props;\r\n    return(\r\n        <div className=\"tc bg-light-green dib pa3 ma2 grow bw2 shadow-5\">\r\n             <img alt='robots' src={`https://robohash.org/${id}?200*200`}/>\r\n\r\n        <div>\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst cardList = ({ robots }) => {\r\n\r\n  \r\n     return(\r\n        <div>\r\n            {robots.map((user,i ) =>{\r\n            return  (\r\n            <Card \r\n            key={i} \r\n            id={robots[i].id} \r\n            name={robots[i].name} \r\n            email={robots[i].email}\r\n        /> \r\n    )\r\n    })\r\n    };\r\n        </div>\r\n    );\r\n}\r\nexport default cardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) =>{\r\n    return(\r\n        <input \r\n                className=\"pa3 ba b--green bg-lightest-blue\" \r\n                type='search' \r\n                placeholder=\"Search Robots\" \r\n                onChange={searchChange}\r\n                />\r\n    );\r\n}\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n    return (\r\n        <div style={{overflowY:'scroll',border:'5px solid black',height:'750px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component{\r\n    constructor(props){\r\n        super(props)\r\n            this.state ={\r\n                hasError:false\r\n            }\r\n        \r\n    }\r\n\r\n    componentDidCatch(error,info){\r\n        this.setState({hasError:true})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Something went wrong</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport CardList from '../Components/CardList';\r\nimport SearchBox from '../Components/Searchbox';\r\nimport Scroll from '../Components/Scroll';\r\nimport ErrorBoundry from '../Components/ErrorBoundry';\r\nimport './app.css';\r\n\r\n\r\n\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n         super()\r\n        this.state={\r\n           \r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response =>  response.json())\r\n        .then(users =>this.setState({robots:users}))\r\n    }\r\n    onSearchChange = (event) =>{\r\n       this.setState({searchfield: event.target.value})\r\n        \r\n         \r\n    }\r\n    render(){\r\n        const filteredRobots = this.state.robots.filter(robot=>{\r\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        });\r\n        if(this.state.robots.length ===0){\r\n            return <h1>Loading</h1>\r\n        }else{\r\n         return(\r\n            <div className='tc'>\r\n                <h1 className='f1'>RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n            <Scroll>\r\n                <ErrorBoundry>\r\n                    <CardList robots={filteredRobots}/>\r\n                </ErrorBoundry>\r\n            </Scroll>\r\n            </div>\r\n        \r\n            \r\n    );\r\n    }\r\n    }\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  \n    <App /> ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}